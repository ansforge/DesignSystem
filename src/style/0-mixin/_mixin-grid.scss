/// Grid system
//
// Generate semantic grid columns with these mixins.
// Based on Bootstrap grid system

// *
// * Create a row (apply to the parent of columns)
// *
// * @param $gutter: Value of gutters between columns. Default 0
// *
// * @example
// *  @include aw-make-row()
// *  @include aw-make-row(3rem)
// *
@mixin aw-make-row($gutter: null) {
    display: flex;
    flex-wrap: wrap;

    @if ($gutter) {
        margin-right: $gutter / -2;
        margin-left: $gutter / -2;
    }
}

// *
// * Create columns
// *
// * @param $gutter: Value of gutters between columns. Default 0
// *
// * @example
// *  @include aw-make-col-ready()
// *  @include aw-make-col-ready(3rem)
// *
@mixin aw-make-col-ready($gutter: null) {
    position: relative;
    // Prevent columns from becoming too narrow when at smaller grid tiers by
    // always setting `width: 100%;`. This works because we use `flex` values
    // later on to override this initial width.
    width: 100%;
    min-height: 1px; // Prevent collapsing

    @if ($gutter) {
        padding-right: $gutter / 2;
        padding-left: $gutter / 2;
    }
}

// *
// * Specify width of columns
// *
// * @param $value: Value of the width of columns.
// *
// * @example
// *  @include aw-make-col-value(50%)
// *  @include aw-make-col-value(20rem)
// *
@mixin aw-make-col-value($value) {
    flex: 0 0 $value;
    // Add a `max-width` to ensure content within each column does not blow out
    // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
    // do not appear to require this.
    max-width: $value;
}

// *
// * Apply auto width for columns
// *
// * @info if the parent is display: flex, columns will have equal width
// *
// * @example
// *  @include aw-make-col-auto()
// *
@mixin aw-make-col-auto {
    flex-basis: 0;
    flex-grow: 1;
    max-width: 100%;
}