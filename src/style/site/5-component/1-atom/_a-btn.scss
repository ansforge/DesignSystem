button {
    @include reset-btn;
}

.btn {
    border-top-left-radius: 0;
    transition: color 250ms ease, background-color 250ms ease, border-color 250ms ease;

    .svg-external-link {
        color: inherit;
    }

    &:disabled,
    &.disabled {
        color: $gray-700 !important;
        background-color: $gray-200 !important;
        border-color: $gray-200 !important;
    }
}

.btn-xs {
    @include button-size(0.7rem, 2rem, 1.4rem, $btn-line-height-sm, 0 1.7rem 1.7rem 1.7rem);
}

.btn--plain {
    @each $color, $value in $project-colors {
        &.btn--#{$color} {
            @if ($color == "primary") {
                @include aw-button-variant(
                    $default-color: var(--white), $default-background: $value, $default-border: $value,
                    $hover-color: var(--white), $hover-background: var(--primary-dark), $hover-border: var(--primary-dark),
                    $active-color: var(--white), $active-background: var(--primary-darker), $active-border: var(--primary-darker),
                    $outline-color: $value
                );
            }
        }
    }
}

.btn--ghost {
    @each $color, $value in $project-colors {
        &.btn--#{$color} {
            @if ($color == "default") {
                @include aw-button-variant(
                    $default-color: $value, $default-background: transparent, $default-border: $value,
                    $hover-color: var(--white), $hover-background: var(--black), $hover-border: var(--black),
                    $active-color: var(--white), $active-background: var(--gray-800), $active-border: var(--gray-800),
                    $outline-color: $value
                );
            }
            @if ($color == "primary") {
                @include aw-button-variant(
                    $default-color: $value, $default-background: transparent, $default-border: $value,
                    $hover-color: var(--white), $hover-background: var(--primary-dark), $hover-border: var(--primary-dark),
                    $active-color: var(--white), $active-background: var(--primary-darker), $active-border: var(--primary-darker),
                    $outline-color: $value
                );
            }
        }
    }
}

[class*="btn--icon"] {
    display: inline-flex;
    align-items: center;
    justify-content: center;

    [class*="icon"],
    [class*="svg-icon"] {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        line-height: 1;
        font-size: 75%;
    }
}

a[class*="btn--icon"]:not(.btn) {
    position: relative;
    padding-left: 1.5rem; // space for icon
    display: inline-block;
    text-align: left;
    line-height: normal;

    color: var(--primary, $primary);
    @include link-inverse();

    .svg-icon {
        position: absolute;
        top: 0.5rem;
        left: 0;
        max-width: 1rem; // icon can't exceed padding left
    }

    .text-white & {
        color: $white;

        svg {
            color: $white;
        }
    }
}

.btn--icon-only {
    padding: 0;
    width: var(--btn-height);
    height: var(--btn-height);

    &.btn-sm {
        --btn-height: 4rem;
    }

    &.btn-xs {
        --btn-height: 3.4rem;
    }
}

.btn--icon-before {
    [class*="icon"],
    [class*="svg-icon"] {
        margin-right: 0.8rem;
    }
}
.btn--icon-after {
    [class*="icon"],
    [class*="svg-icon"] {
        margin-left: 0.8rem;
    }
}

.btn-group {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;

    > * {
        margin-top: 1rem;
        margin-bottom: 0;

        &:not(:last-child) {
            margin-right: 2rem;
        }

        &:first-child:not(:only-child) {
            border-top-right-radius: 0;
            border-top-left-radius: $btn-border-radius;
        }
    }
}

.btn--add {
    display: flex;
    width: 100%;
    padding: 3rem;
    font-weight: $fw-semiBold;
    background-color: var(--gray-100);
    color: var(--body-color-darker);
    border-radius: var(--border-radius-sm, $border-radius-sm);
    border: dashed 0.1rem var(--gray-500, $gray-500);

    [class*="icon"],
    [class*="svg-icon"] {
        margin-right: 1.6rem;
        font-size: 2.9rem;
        color: var(--primary, $primary);
    }

    .svg-circle-cross {
        transform: rotate(45deg);
    }

    &:hover,
    &:focus {
        color: var(--body-color-darker);
        border-color: var(--primary, $primary);
    }
}

a.btn--style1 {
    $icon-width: 5.2rem;
    $btn-radius: 2.6rem;

    position: relative;
    padding: 1.55rem 7.7rem 1.55rem 3rem;
    text-align: left;
    line-height: 1.2;
    color: var(--body-color-darker);
    border-radius: $btn-radius;
    border: 0;
    box-shadow: var(--box-shadow-lg);
    overflow: hidden;

    &:hover,
    &:focus {
        color: var(--primary, $primary);
    }

    &:not(.external-link):not(.mailto-link):not(.file-link) {
        @include svg-css-icon-change-color(arrow-right);

        &::after {
            @include svg-css();
            background-size: 1.8rem;
        }
    }

    &::before {
        content: "";
        position: absolute;
        bottom: 0;
        right: $icon-width;
        height: 4rem;
        width: 2rem;
        border-radius: 25% 75% / 50% 0;
        background-color: transparent;
        box-shadow: 0 2rem 0 0 var(--primary, $primary); // 2rem = half of the height
        z-index: 1;
    }

    &::after {
        position: absolute;
        right: 0;
        bottom: 0;
        width: $icon-width;
        height: 100%;
        margin: 0;
        border-radius: $btn-radius $btn-radius $btn-radius 0;
        background-color: var(--primary, $primary);
        background-size: 1.8rem;
    }

    &.btn--white {
        background-color: $white;
    }
}